// Code generated by MockGen. DO NOT EDIT.
// Source: .\api\handler\server_handler.go
//
// Generated by this command:
//
//	mockgen -source .\api\handler\server_handler.go -destination ./mocks/api/handler/mock_server_handler.go
//

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockServerHandler is a mock of ServerHandler interface.
type MockServerHandler struct {
	ctrl     *gomock.Controller
	recorder *MockServerHandlerMockRecorder
	isgomock struct{}
}

// MockServerHandlerMockRecorder is the mock recorder for MockServerHandler.
type MockServerHandlerMockRecorder struct {
	mock *MockServerHandler
}

// NewMockServerHandler creates a new mock instance.
func NewMockServerHandler(ctrl *gomock.Controller) *MockServerHandler {
	mock := &MockServerHandler{ctrl: ctrl}
	mock.recorder = &MockServerHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerHandler) EXPECT() *MockServerHandlerMockRecorder {
	return m.recorder
}

// CreateServer mocks base method.
func (m *MockServerHandler) CreateServer() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateServer")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// CreateServer indicates an expected call of CreateServer.
func (mr *MockServerHandlerMockRecorder) CreateServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateServer", reflect.TypeOf((*MockServerHandler)(nil).CreateServer))
}

// DeleteServer mocks base method.
func (m *MockServerHandler) DeleteServer() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteServer")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// DeleteServer indicates an expected call of DeleteServer.
func (mr *MockServerHandlerMockRecorder) DeleteServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteServer", reflect.TypeOf((*MockServerHandler)(nil).DeleteServer))
}

// ExportServersToExcelFile mocks base method.
func (m *MockServerHandler) ExportServersToExcelFile() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportServersToExcelFile")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// ExportServersToExcelFile indicates an expected call of ExportServersToExcelFile.
func (mr *MockServerHandlerMockRecorder) ExportServersToExcelFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportServersToExcelFile", reflect.TypeOf((*MockServerHandler)(nil).ExportServersToExcelFile))
}

// GetServerUptimePercentage mocks base method.
func (m *MockServerHandler) GetServerUptimePercentage() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServerUptimePercentage")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// GetServerUptimePercentage indicates an expected call of GetServerUptimePercentage.
func (mr *MockServerHandlerMockRecorder) GetServerUptimePercentage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServerUptimePercentage", reflect.TypeOf((*MockServerHandler)(nil).GetServerUptimePercentage))
}

// GetServers mocks base method.
func (m *MockServerHandler) GetServers() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServers")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// GetServers indicates an expected call of GetServers.
func (mr *MockServerHandlerMockRecorder) GetServers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServers", reflect.TypeOf((*MockServerHandler)(nil).GetServers))
}

// ImportServersFromExcelFile mocks base method.
func (m *MockServerHandler) ImportServersFromExcelFile() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportServersFromExcelFile")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// ImportServersFromExcelFile indicates an expected call of ImportServersFromExcelFile.
func (mr *MockServerHandlerMockRecorder) ImportServersFromExcelFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportServersFromExcelFile", reflect.TypeOf((*MockServerHandler)(nil).ImportServersFromExcelFile))
}

// ReportAllServersHealthInfo mocks base method.
func (m *MockServerHandler) ReportAllServersHealthInfo() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReportAllServersHealthInfo")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// ReportAllServersHealthInfo indicates an expected call of ReportAllServersHealthInfo.
func (mr *MockServerHandlerMockRecorder) ReportAllServersHealthInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportAllServersHealthInfo", reflect.TypeOf((*MockServerHandler)(nil).ReportAllServersHealthInfo))
}

// UpdateServer mocks base method.
func (m *MockServerHandler) UpdateServer() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateServer")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// UpdateServer indicates an expected call of UpdateServer.
func (mr *MockServerHandlerMockRecorder) UpdateServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateServer", reflect.TypeOf((*MockServerHandler)(nil).UpdateServer))
}
