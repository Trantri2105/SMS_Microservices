// Code generated by MockGen. DO NOT EDIT.
// Source: .\utils.go
//
// Generated by this command:
//
//	mockgen -source .\utils.go -destination ./mocks/mock_utils.go
//

// Package mock_jwt is a generated GoMock package.
package jwt

import (
	jwt "VCS_SMS_Microservice/internal/auth-service/jwt"
	reflect "reflect"

	jwt0 "github.com/golang-jwt/jwt"
	gomock "go.uber.org/mock/gomock"
)

// MockUtils is a mock of Utils interface.
type MockUtils struct {
	ctrl     *gomock.Controller
	recorder *MockUtilsMockRecorder
	isgomock struct{}
}

// MockUtilsMockRecorder is the mock recorder for MockUtils.
type MockUtilsMockRecorder struct {
	mock *MockUtils
}

// NewMockUtils creates a new mock instance.
func NewMockUtils(ctrl *gomock.Controller) *MockUtils {
	mock := &MockUtils{ctrl: ctrl}
	mock.recorder = &MockUtilsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUtils) EXPECT() *MockUtilsMockRecorder {
	return m.recorder
}

// CreateAccessToken mocks base method.
func (m *MockUtils) CreateAccessToken(userID string, scopes ...string) (jwt.AccessToken, error) {
	m.ctrl.T.Helper()
	varargs := []any{userID}
	for _, a := range scopes {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateAccessToken", varargs...)
	ret0, _ := ret[0].(jwt.AccessToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccessToken indicates an expected call of CreateAccessToken.
func (mr *MockUtilsMockRecorder) CreateAccessToken(userID any, scopes ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{userID}, scopes...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccessToken", reflect.TypeOf((*MockUtils)(nil).CreateAccessToken), varargs...)
}

// CreateRefreshToken mocks base method.
func (m *MockUtils) CreateRefreshToken(userID string) (jwt.RefreshToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRefreshToken", userID)
	ret0, _ := ret[0].(jwt.RefreshToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRefreshToken indicates an expected call of CreateRefreshToken.
func (mr *MockUtilsMockRecorder) CreateRefreshToken(userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRefreshToken", reflect.TypeOf((*MockUtils)(nil).CreateRefreshToken), userID)
}

// VerifyToken mocks base method.
func (m *MockUtils) VerifyToken(tokenString string) (jwt0.MapClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyToken", tokenString)
	ret0, _ := ret[0].(jwt0.MapClaims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyToken indicates an expected call of VerifyToken.
func (mr *MockUtilsMockRecorder) VerifyToken(tokenString any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*MockUtils)(nil).VerifyToken), tokenString)
}
